####################################
# This file is sourced by btrfs-borg
CONFIG_VERSION=0
####################################

# The normal directory where the full trees of each btrfs volume will
# be automounted.  It will be created if it does not exist.  eg: if
# /btrfs-admin, and you have a btrfs volume on /dev/sda1, and a raid1
# profile btrfs volume on /dev/sdb2 and /dev/sdc2, then this will
# mount your volumes at /btrfs-admin/sda1 and /btrfs-admin/sdb
ADMIN_DIR=/btrfs-admin

# $ADMIN_DIR permissions will be modified so that only root and this
# group can access it
ADMIN_GROUP='sudo'

# SNAPS_DIR is relative to $ADMIN_DIR/device-basename Each volume must
# have its own snapshot location; this can be either a normal
# directory or a subvolume, but it must reside directly inside of each
# volume's subvolid=5 aka: subvol=/
SNAPS_DIR=snapshots

# SUBVOL_LIST is an exclusive whitelist for all possible backup
# sources.  If advanced configuration of backup units is desired, you
# can use the CSV as a second-level exclusive whitelist.  For the
# simplest configuration, leave this set to 'auto' and allow btrfs-borg
# to backup all non-snapshot non-ro subvolumes.  For configuration similar to
# btrfs-borg-0.13, list your subvolumes here.  For advanced
# configuration, set to add and configure backup units in the CSV
# NOTICE: By default, btrfs-borg does not backup subvolumes that are
# marked as read-only snapshots.  Because the current implementation
# will send, for example, 1TB of data for @rootfs (new snapshot
# created from live copy) plus another 1TB for each
# @rootfs_custom_snapshot.  At a backup rate of 100MiB/s, this adds an
# additional 167minutes.  Using rsync -c to find the differences would
# be even slower.  Finally, one of the premises of btrfs-borg is to
# not depend on btrfs send and receive.
#
# TODO: auto does what I wrote, and all will If you prefer a maximally
# slow backup, set this to 'all'.  Snapshot filtering will be
# disabled, and all subvolumes will be backed up
SUBVOL_LIST='auto'



# See borg(1) for details
VERBOSITY='--info --show-rc'

# Uncomment EXTRAARGS to exclude from the backup directories that
# contain a file named CACHEDIR.TAG; this file must, at a minimum,
# have the following one line ASCII header string (Signature...without
# the leading '#'):
# # Signature: 8a477f597d28d172789f06886806bc55
# #
# # This file is a cache directory tag created by (application name).
# # For information about cache directory tags, see:
# #      http://www.brynosaurus.com/cachedir/

# EXTRAARGS='--exclude-caches'

# You can use this section as a pre-backup script eg:
### TODO -- Build manifests in a better way?

# On my system, these are subvolumes that won't be backed up;
# however, I'd like to keep a list of their contents.  Make sure that
# the manifests are put on a subvolume that will be backed up.
echo "Manifests have not been configured, please edit btrfs-borg configuration"
#cd /usr/src && find > /home/backups/src.manifest
#cd /home/triage && find > /home/backups/triage.manifest
#echo "Building manifests"
